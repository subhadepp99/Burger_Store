{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ui\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Auxs';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from \"../../store/actions\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ings: null,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You Continue');\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const querystring = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + querystring\n      });\n    };\n  }\n\n  componentDidMount() {// console.log(this.props);\n    // axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json')\n    // .then(res=>{\n    //     this.setState({ingredients:res.data})\n    // })\n    // .catch(error=>{\n    //     this.setState({error:true});\n    // });\n  }\n\n  updatePurchasedState(ingredients) {\n    // const ingredients={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  } // addIngredientHandler =(type)=>{\n  //    const oldCount=this.state.ingredients[type];\n  //     const updatedCounted=oldCount +1;\n  //      const updatedIngredients ={\n  //         ...this.state.ingredients\n  //          };\n  //                     updatedIngredients[type]=updatedCounted;\n  //                     const priceAddition =INGREDIENT_PRICES[type];\n  //                     const oldPrice =this.state.totalPrice;\n  //                     const newPrice=oldPrice+priceAddition;\n  //                     this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \n  // this.updatePurchasedState(updatedIngredients);\n  //                     }\n  //                     removeIngredientHandler =(type)=>{\n  //                         const oldCount=this.state.ingredients[type];\n  //                         if(oldCount <=0){\n  //                             return;\n  //                         }\n  //                         const updatedCounted=oldCount -1;\n  //                         const updatedIngredients ={\n  //                         ...this.state.ingredients\n  //                         };\n  //                         updatedIngredients[type]=updatedCounted;\n  //                         const priceDeduction =INGREDIENT_PRICES[type];\n  //                         const oldPrice =this.state.totalPrice;\n  //                         const newPrice=oldPrice-priceDeduction;\n  //                         this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \n  //                         this.updatePurchasedState(updatedIngredients);\n  //                     }\n\n\n  render() {\n    const disabledInfo = { ...this.props.ing\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 30\n      }\n    }, \"Ingredients can't be loaded\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 65\n      }\n    });\n\n    if (this.props.ing) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        purchaseCanceled: this.purchaseCancelHandler,\n        purchasedContinue: this.purchaseContinueHandler,\n        totalprice: this.state.totalPrice,\n        ingredients: this.props.ing,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 22\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:/Ui/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","actionTypes","BurgerBuilder","state","ings","purchasable","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","totalPrice","querystring","join","props","history","pathname","search","componentDidMount","updatePurchasedState","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ing","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","price","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Auxs';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    state={\r\n        ings :null,\r\n        \r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n\r\ncomponentDidMount(){\r\n    // console.log(this.props);\r\n    // axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json')\r\n    // .then(res=>{\r\n    //     this.setState({ingredients:res.data})\r\n    // })\r\n    // .catch(error=>{\r\n    //     this.setState({error:true});\r\n    // });\r\n}\r\n\r\n\r\n    updatePurchasedState(ingredients){\r\n        // const ingredients={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map(igKey=>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum  +el;\r\n        },0);\r\n\r\n        this.setState({purchasable:sum>0});\r\n    }\r\n\r\n// addIngredientHandler =(type)=>{\r\n//    const oldCount=this.state.ingredients[type];\r\n//     const updatedCounted=oldCount +1;\r\n//      const updatedIngredients ={\r\n//         ...this.state.ingredients\r\n//          };\r\n//                     updatedIngredients[type]=updatedCounted;\r\n//                     const priceAddition =INGREDIENT_PRICES[type];\r\n//                     const oldPrice =this.state.totalPrice;\r\n//                     const newPrice=oldPrice+priceAddition;\r\n//                     this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n// this.updatePurchasedState(updatedIngredients);\r\n\r\n//                     }\r\n\r\n//                     removeIngredientHandler =(type)=>{\r\n//                         const oldCount=this.state.ingredients[type];\r\n//                         if(oldCount <=0){\r\n//                             return;\r\n//                         }\r\n\r\n//                         const updatedCounted=oldCount -1;\r\n//                         const updatedIngredients ={\r\n//                         ...this.state.ingredients\r\n//                         };\r\n//                         updatedIngredients[type]=updatedCounted;\r\n//                         const priceDeduction =INGREDIENT_PRICES[type];\r\n//                         const oldPrice =this.state.totalPrice;\r\n//                         const newPrice=oldPrice-priceDeduction;\r\n//                         this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n//                         this.updatePurchasedState(updatedIngredients);\r\n//                     }\r\n\r\n                    purchaseHandler=()=>{\r\n\r\n                        this.setState({purchasing:true});\r\n                    }\r\n\r\n                    purchaseCancelHandler=()=>{\r\n\r\n                        this.setState({purchasing:false});\r\n                    }\r\n\r\n                    purchaseContinueHandler=()=>{\r\n                      \r\n\r\n                        //alert('You Continue');\r\n                        const queryParams=[];\r\n                        for(let i in this.state.ingredients){\r\n                            queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n                        }\r\n                        queryParams.push('price='+this.state.totalPrice);\r\n                        const querystring=queryParams.join('&');\r\n                        this.props.history.push({\r\n                            pathname:'/checkout',\r\n                            search:'?'+querystring\r\n                        });\r\n                    }\r\n\r\n    render(){\r\n\r\n\r\nconst disabledInfo={\r\n    ...this.props.ing\r\n};\r\nfor(let key in disabledInfo){\r\n    disabledInfo[key]=disabledInfo[key] <=0\r\n}\r\n\r\nlet orderSummary=null; \r\nlet burger=this.state.error? <p>Ingredients can't be loaded</p>:<Spinner />;\r\nif(this.props.ing){\r\n    burger=(<Aux><Burger ingredients={this.props.ing}/>\r\n        <BuildControls \r\n        ingredientAdded={this.props.onIngredientAdded} \r\n        ingredientRemoved={this.props.onIngredientRemoved}\r\n        disabled= {disabledInfo}\r\n        price={this.state.totalPrice}\r\n        ordered={this.purchaseHandler}\r\n        purchasable ={this.state.purchasable}\r\n        /></Aux>);\r\n        orderSummary=<OrderSummary \r\npurchaseCanceled={this.purchaseCancelHandler}\r\npurchasedContinue={this.purchaseContinueHandler}\r\ntotalprice={this.state.totalPrice}\r\n        ingredients={this.props.ing}/>;\r\n}\r\nif(this.state.loading){\r\n    orderSummary=<Spinner />;\r\n}\r\n\r\n        return (\r\n<Aux>\r\n    <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n        {orderSummary}\r\n    </Modal>\r\n   {burger}\r\n</Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state=>{\r\nreturn{\r\nings:state.ingredients,\r\nprice:state.totalPrice\r\n};\r\n};\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\nreturn{\r\nonIngredientAdded:(ingName)=>dispatch({type:actionTypes.ADD_INGREDIENT,ingredientName:ingName}),\r\nonIngredientRemoved:(ingName)=>dispatch({type:actionTypes.REMOVE_INGREDIENT,ingredientName:ingName})\r\n};\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}