{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ui\\\\src\\\\containers\\\\Checkout\\\\Checkout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport { Route, Redirect } from 'react-router-dom';\nimport ContactData from './ContactData/ContactData';\nimport * as actions from '../../store/actions';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelled = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinued = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  componentWillMount() {\n    this.props.onInitPurchase();\n  } //  state ={ingredients:null,\n  //      totalPrice:0\n  // }\n  // componentWillMount(){\n  //     const query=new URLSearchParams(this.props.location.search);\n  //     const ingredients={};\n  //     let price=0;\n  //     for(let param of query.entries()){\n  //         //['salad','1']{\n  //     //  {\n  //     //     salad :1,\n  //     //     cheese :1,\n  //     //     meat : 1,\n  //     //     bacon: 1\n  //     // }\n  // if(param[0]==='price')\n  // {\n  // price=param[1];\n  // }\n  // else{\n  //     ingredients[param[0]]= +param[1];\n  // }\n  //     }\n  //     this.setState({ingredients:ingredients,totalPrice:price});;\n  // }\n\n\n  render() {\n    let summary = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    });\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 51\n        }\n      }) : null;\n      summary = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutCancelled: this.checkoutCancelled,\n        checkoutContinued: this.checkoutContinued,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        component: ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 14\n        }\n      }));\n    }\n\n    return (// <div>\n      summary // <Route path={this.props.match.path +'/contact-data'} \n      //render={(props)=>(<ContactData ingredients={this.props.ings} price={this.props.price} {...props}/>)}/> */}\n      // </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients // purchased:state.order.purchased\n    // price:state.burgerBuilder.totalPrice\n\n  };\n}; //  const mapDispatchToProps =dispatch =>{\n//      return{\n// onInitPurchase: ()=>dispatch(actions.purchaseInit())\n//      };\n//  }\n\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["D:/Ui/src/containers/Checkout/Checkout.js"],"names":["React","Component","connect","CheckoutSummary","Route","Redirect","ContactData","actions","Checkout","checkoutCancelled","props","history","goBack","checkoutContinued","replace","componentWillMount","onInitPurchase","render","summary","ings","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAgC;AAAA;AAAA;;AAAA,SAsChCQ,iBAtCgC,GAsCb,MAAI;AACvB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACC,KAxC+B;;AAAA,SAyChCC,iBAzCgC,GAyCb,MAAI;AACnB,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KA3C+B;AAAA;;AAE5BC,EAAAA,kBAAkB,GAAE;AACxB,SAAKL,KAAL,CAAWM,cAAX;AACK,GAJ2B,CAOhC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;;;AAWIC,EAAAA,MAAM,GAAE;AACZ,QAAIC,OAAO,gBAAC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;;AAEA,QAAG,KAAKR,KAAL,CAAWS,IAAd,EAAmB;AACf,YAAMC,iBAAiB,GAAC,KAAKV,KAAL,CAAWW,SAAX,gBAAsB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB,GAA2C,IAAnE;AACAH,MAAAA,OAAO,gBAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACb,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWS,IAAzC;AACY,QAAA,iBAAiB,EAAE,KAAKV,iBADpC;AAEa,QAAA,iBAAiB,EAAE,KAAKI,iBAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,eAIA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,GAAuB,eAApC;AAAqD,QAAA,SAAS,EAAEjB,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CAAT;AAOH;;AAED,WACQ;AACGY,MAAAA,OAFX,CAGA;AACA;AAEQ;;AANR;AAQC;;AApE+B;;AAuEhC,MAAMM,eAAe,GAAEC,KAAK,IAAE;AAC1B,SAAM;AACNN,IAAAA,IAAI,EAACM,KAAK,CAACC,aAAN,CAAoBC,WADnB,CAEN;AACA;;AAHM,GAAN;AAKF,CANF,C,CASA;AACA;AACA;AACA;AACA;;;AAGA,eAAezB,OAAO,CAACsB,eAAD,CAAP,CAA0BhB,QAA1B,CAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass Checkout extends Component{\r\n\r\n    componentWillMount(){\r\nthis.props.onInitPurchase();\r\n    }\r\n\r\n    \r\n//  state ={ingredients:null,\r\n//      totalPrice:0\r\n// }\r\n\r\n// componentWillMount(){\r\n//     const query=new URLSearchParams(this.props.location.search);\r\n//     const ingredients={};\r\n//     let price=0;\r\n//     for(let param of query.entries()){\r\n//         //['salad','1']{\r\n//     //  {\r\n//     //     salad :1,\r\n//     //     cheese :1,\r\n//     //     meat : 1,\r\n//     //     bacon: 1\r\n//     // }\r\n// if(param[0]==='price')\r\n// {\r\n// price=param[1];\r\n// }\r\n// else{\r\n//     ingredients[param[0]]= +param[1];\r\n// }\r\n\r\n\r\n//     }\r\n\r\n//     this.setState({ingredients:ingredients,totalPrice:price});;\r\n// }\r\n\r\n\r\ncheckoutCancelled =()=>{\r\nthis.props.history.goBack();\r\n}\r\ncheckoutContinued =()=>{\r\n    this.props.history.replace('/checkout/contact-data');\r\n}\r\n\r\n\r\n    render(){\r\nlet summary=<Redirect to=\"/\" />;\r\n\r\nif(this.props.ings){\r\n    const purchasedRedirect=this.props.purchased? <Redirect to =\"/\"/> :null;\r\n    summary=(<div>\r\n<CheckoutSummary ingredients={this.props.ings} \r\n            checkoutCancelled={this.checkoutCancelled}\r\n             checkoutContinued={this.checkoutContinued} />\r\n             <Route path={this.props.match.path +'/contact-data'} component={ContactData} /></div>\r\n    );\r\n\r\n}\r\n\r\nreturn(\r\n        // <div>\r\n           summary\r\n// <Route path={this.props.match.path +'/contact-data'} \r\n//render={(props)=>(<ContactData ingredients={this.props.ings} price={this.props.price} {...props}/>)}/> */}\r\n\r\n        // </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps= state=>{\r\n    return{\r\n    ings:state.burgerBuilder.ingredients,\r\n    // purchased:state.order.purchased\r\n    // price:state.burgerBuilder.totalPrice\r\n    };\r\n };\r\n    \r\n\r\n//  const mapDispatchToProps =dispatch =>{\r\n//      return{\r\n// onInitPurchase: ()=>dispatch(actions.purchaseInit())\r\n//      };\r\n//  }\r\n    \r\n\r\nexport default connect(mapStateToProps) (Checkout);"]},"metadata":{},"sourceType":"module"}