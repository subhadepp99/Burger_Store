{"ast":null,"code":"var _jsxFileName = \"D:\\\\burger\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasedState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCounted = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasedState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n  }\n\n  updatePurchasedState(ingredients) {\n    // const ingredients={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      purchasable: this.state.purchasable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["D:/burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchasedState","removeIngredientHandler","priceDeduction","purchaseHandler","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\n\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad :0.5,\r\n    cheese : 0.4,\r\n    meat : 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state={\r\n        ingredients :{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable:false,\r\n        purchasing:false\r\n    }\r\n\r\n\r\n    updatePurchasedState(ingredients){\r\n        // const ingredients={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map(igKey=>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum  +el;\r\n        },0);\r\n\r\n        this.setState({purchasable:sum>0});\r\n    }\r\n\r\naddIngredientHandler =(type)=>{\r\n   const oldCount=this.state.ingredients[type];\r\n    const updatedCounted=oldCount +1;\r\n     const updatedIngredients ={\r\n        ...this.state.ingredients\r\n         };\r\n                    updatedIngredients[type]=updatedCounted;\r\n                    const priceAddition =INGREDIENT_PRICES[type];\r\n                    const oldPrice =this.state.totalPrice;\r\n                    const newPrice=oldPrice+priceAddition;\r\n                    this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\nthis.updatePurchasedState(updatedIngredients);\r\n\r\n                    }\r\n\r\n                    removeIngredientHandler =(type)=>{\r\n                        const oldCount=this.state.ingredients[type];\r\n                        if(oldCount <=0){\r\n                            return;\r\n                        }\r\n\r\n                        const updatedCounted=oldCount -1;\r\n                        const updatedIngredients ={\r\n                        ...this.state.ingredients\r\n                        };\r\n                        updatedIngredients[type]=updatedCounted;\r\n                        const priceDeduction =INGREDIENT_PRICES[type];\r\n                        const oldPrice =this.state.totalPrice;\r\n                        const newPrice=oldPrice-priceDeduction;\r\n                        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n                        this.updatePurchasedState(updatedIngredients);\r\n                    }\r\n\r\n                    purchaseHandler=()=>{\r\n\r\n                        this.setState({purchasing:true});\r\n                    }\r\n\r\n    render(){\r\n\r\n\r\nconst disabledInfo={\r\n    ...this.state.ingredients\r\n};\r\nfor(let key in disabledInfo){\r\n    disabledInfo[key]=disabledInfo[key] <=0\r\n}\r\n\r\n        return (\r\n<Aux>\r\n    <Modal show={this.state.purchasing}>\r\n        <OrderSummary ingredients={this.state.ingredients}/>\r\n    </Modal>\r\n   <Burger ingredients={this.state.ingredients}/>\r\n    <BuildControls \r\n    ingredientAdded={this.addIngredientHandler} \r\n    ingredientRemoved={this.removeIngredientHandler}\r\n   disabled= {disabledInfo}\r\n   price={this.state.totalPrice}\r\n   ordered={this.purchaseHandler}\r\n   purchasable ={this.state.purchasable}\r\n    />\r\n</Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}