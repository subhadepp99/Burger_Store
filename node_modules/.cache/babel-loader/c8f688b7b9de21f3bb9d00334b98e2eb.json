{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ui\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Auxs';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasedState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCounted = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasedState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // this.setState({loading:true});\n      // const order={\n      //     ingredients:this.state.ingredients,\n      //     price:this.state.totalPrice,\n      //     customer:{\n      //         name:'Depp',\n      //         address:{\n      //             street:'Test',\n      //             zipCode:'41352',\n      //             country:'India'\n      //         },\n      //         email:'test@test.com'\n      //     },\n      //     deliveryMethod :'fastest'\n      // }\n      // axios.post('/orders.json',order)\n      // .then(response => {\n      //     this.setState({loading:false,purchasing:false});\n      //     console.log(response);})\n      // .catch(err=>{\n      //     console.log(err);\n      //     this.setState({loading:false,purchasing:false});\n      // } );\n      //alert('You Continue');\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json').then(res => {\n      this.setState({\n        ingredients: res.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchasedState(ingredients) {\n    // const ingredients={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 30\n      }\n    }, \"Ingredients can't be loaded\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 65\n      }\n    });\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 18\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        purchaseCanceled: this.purchaseCancelHandler,\n        purchasedContinue: this.purchaseContinueHandler,\n        totalprice: this.state.totalPrice,\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 22\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["D:/Ui/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchasedState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","console","log","get","then","res","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Auxs';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad :0.5,\r\n    cheese : 0.4,\r\n    meat : 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state={\r\n        ingredients :null,\r\n        totalPrice: 4,\r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n\r\ncomponentDidMount(){\r\n    console.log(this.props);\r\n    axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json')\r\n    .then(res=>{\r\n        this.setState({ingredients:res.data})\r\n    })\r\n    .catch(error=>{\r\n        this.setState({error:true});\r\n    });\r\n}\r\n\r\n\r\n    updatePurchasedState(ingredients){\r\n        // const ingredients={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map(igKey=>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum  +el;\r\n        },0);\r\n\r\n        this.setState({purchasable:sum>0});\r\n    }\r\n\r\naddIngredientHandler =(type)=>{\r\n   const oldCount=this.state.ingredients[type];\r\n    const updatedCounted=oldCount +1;\r\n     const updatedIngredients ={\r\n        ...this.state.ingredients\r\n         };\r\n                    updatedIngredients[type]=updatedCounted;\r\n                    const priceAddition =INGREDIENT_PRICES[type];\r\n                    const oldPrice =this.state.totalPrice;\r\n                    const newPrice=oldPrice+priceAddition;\r\n                    this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\nthis.updatePurchasedState(updatedIngredients);\r\n\r\n                    }\r\n\r\n                    removeIngredientHandler =(type)=>{\r\n                        const oldCount=this.state.ingredients[type];\r\n                        if(oldCount <=0){\r\n                            return;\r\n                        }\r\n\r\n                        const updatedCounted=oldCount -1;\r\n                        const updatedIngredients ={\r\n                        ...this.state.ingredients\r\n                        };\r\n                        updatedIngredients[type]=updatedCounted;\r\n                        const priceDeduction =INGREDIENT_PRICES[type];\r\n                        const oldPrice =this.state.totalPrice;\r\n                        const newPrice=oldPrice-priceDeduction;\r\n                        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n                        this.updatePurchasedState(updatedIngredients);\r\n                    }\r\n\r\n                    purchaseHandler=()=>{\r\n\r\n                        this.setState({purchasing:true});\r\n                    }\r\n\r\n                    purchaseCancelHandler=()=>{\r\n\r\n                        this.setState({purchasing:false});\r\n                    }\r\n\r\n                    purchaseContinueHandler=()=>{\r\n                        // this.setState({loading:true});\r\n                        // const order={\r\n                        //     ingredients:this.state.ingredients,\r\n                        //     price:this.state.totalPrice,\r\n                        //     customer:{\r\n                        //         name:'Depp',\r\n                        //         address:{\r\n                        //             street:'Test',\r\n                        //             zipCode:'41352',\r\n                        //             country:'India'\r\n                        //         },\r\n                        //         email:'test@test.com'\r\n                        //     },\r\n                        //     deliveryMethod :'fastest'\r\n                        // }\r\n\r\n                        // axios.post('/orders.json',order)\r\n                        // .then(response => {\r\n                        //     this.setState({loading:false,purchasing:false});\r\n                        //     console.log(response);})\r\n                        // .catch(err=>{\r\n                        //     console.log(err);\r\n                        //     this.setState({loading:false,purchasing:false});\r\n                        // } );\r\n\r\n                        //alert('You Continue');\r\n                        this.props.history.push('/checkout');\r\n                    }\r\n\r\n    render(){\r\n\r\n\r\nconst disabledInfo={\r\n    ...this.state.ingredients\r\n};\r\nfor(let key in disabledInfo){\r\n    disabledInfo[key]=disabledInfo[key] <=0\r\n}\r\n\r\nlet orderSummary=null; \r\nlet burger=this.state.error? <p>Ingredients can't be loaded</p>:<Spinner />;\r\nif(this.state.ingredients){\r\n    burger=(<Aux><Burger ingredients={this.state.ingredients}/>\r\n        <BuildControls \r\n        ingredientAdded={this.addIngredientHandler} \r\n        ingredientRemoved={this.removeIngredientHandler}\r\n        disabled= {disabledInfo}\r\n        price={this.state.totalPrice}\r\n        ordered={this.purchaseHandler}\r\n        purchasable ={this.state.purchasable}\r\n        /></Aux>);\r\n        orderSummary=<OrderSummary \r\npurchaseCanceled={this.purchaseCancelHandler}\r\npurchasedContinue={this.purchaseContinueHandler}\r\ntotalprice={this.state.totalPrice}\r\n        ingredients={this.state.ingredients}/>;\r\n}\r\nif(this.state.loading){\r\n    orderSummary=<Spinner />;\r\n}\r\n\r\n        return (\r\n<Aux>\r\n    <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n        {orderSummary}\r\n    </Modal>\r\n   {burger}\r\n</Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}