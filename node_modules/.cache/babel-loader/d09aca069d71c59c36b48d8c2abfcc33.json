{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ui\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Auxs';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actionTypes from \"../../store/actions\";\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // ings :null,\n      // purchasable:false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.history.push('/checkout'); // //alert('You Continue');\n      // const queryParams=[];\n      // for(let i in this.state.ingredients){\n      //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\n      // }\n      // queryParams.push('price='+this.state.totalPrice);\n      // const querystring=queryParams.join('&');\n      // this.props.history.push({\n      //     pathname:'/checkout',\n      //     search:'?'+querystring\n      // });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json').then(res => {\n      this.setState({\n        ingredients: res.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchasedState(ingredients) {\n    // const ingredients={\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0); //this.setState({purchasable:sum>0});\n\n    return sum > 0;\n  } // addIngredientHandler =(type)=>{\n  //    const oldCount=this.state.ingredients[type];\n  //     const updatedCounted=oldCount +1;\n  //      const updatedIngredients ={\n  //         ...this.state.ingredients\n  //          };\n  //                     updatedIngredients[type]=updatedCounted;\n  //                     const priceAddition =INGREDIENT_PRICES[type];\n  //                     const oldPrice =this.state.totalPrice;\n  //                     const newPrice=oldPrice+priceAddition;\n  //                     this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \n  // this.updatePurchasedState(updatedIngredients);\n  //                     }\n  //                     removeIngredientHandler =(type)=>{\n  //                         const oldCount=this.state.ingredients[type];\n  //                         if(oldCount <=0){\n  //                             return;\n  //                         }\n  //                         const updatedCounted=oldCount -1;\n  //                         const updatedIngredients ={\n  //                         ...this.state.ingredients\n  //                         };\n  //                         updatedIngredients[type]=updatedCounted;\n  //                         const priceDeduction =INGREDIENT_PRICES[type];\n  //                         const oldPrice =this.state.totalPrice;\n  //                         const newPrice=oldPrice-priceDeduction;\n  //                         this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \n  //                         this.updatePurchasedState(updatedIngredients);\n  //                     }\n\n\n  render() {\n    const disabledInfo = { ...this.props.ings\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 30\n      }\n    }, \"Ingredients can't be loaded\") : /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 65\n      }\n    });\n\n    if (this.props.ings) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        price: this.props.price,\n        ordered: this.purchaseHandler,\n        purchasable: this.updatePurchasedState(this.props.ings),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        purchaseCanceled: this.purchaseCancelHandler,\n        purchasedContinue: this.purchaseContinueHandler,\n        totalprice: this.props.price,\n        ingredients: this.props.ings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 22\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch({\n      type: actionTypes.ADD_INGREDIENT,\n      ingredientName: ingName\n    }),\n    onIngredientRemoved: ingName => dispatch({\n      type: actionTypes.REMOVE_INGREDIENT,\n      ingredientName: ingName\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["D:/Ui/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","actionTypes","BurgerBuilder","state","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","console","log","get","then","res","ingredients","data","catch","updatePurchasedState","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Auxs';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    state={\r\n        // ings :null,\r\n        \r\n        // purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n\r\ncomponentDidMount(){\r\n    console.log(this.props);\r\n    axios.get('https://react-my-burger-fb977.firebaseio.com/ingredients.json')\r\n    .then(res=>{\r\n        this.setState({ingredients:res.data})\r\n    })\r\n    .catch(error=>{\r\n        this.setState({error:true});\r\n    });\r\n}\r\n\r\n\r\n    updatePurchasedState(ingredients){\r\n        // const ingredients={\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients).map(igKey=>{\r\n            return ingredients[igKey];\r\n        }).reduce((sum,el)=>{\r\n            return sum  +el;\r\n        },0);\r\n\r\n        //this.setState({purchasable:sum>0});\r\n    return sum>0;\r\n    }\r\n\r\n// addIngredientHandler =(type)=>{\r\n//    const oldCount=this.state.ingredients[type];\r\n//     const updatedCounted=oldCount +1;\r\n//      const updatedIngredients ={\r\n//         ...this.state.ingredients\r\n//          };\r\n//                     updatedIngredients[type]=updatedCounted;\r\n//                     const priceAddition =INGREDIENT_PRICES[type];\r\n//                     const oldPrice =this.state.totalPrice;\r\n//                     const newPrice=oldPrice+priceAddition;\r\n//                     this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n// this.updatePurchasedState(updatedIngredients);\r\n\r\n//                     }\r\n\r\n//                     removeIngredientHandler =(type)=>{\r\n//                         const oldCount=this.state.ingredients[type];\r\n//                         if(oldCount <=0){\r\n//                             return;\r\n//                         }\r\n\r\n//                         const updatedCounted=oldCount -1;\r\n//                         const updatedIngredients ={\r\n//                         ...this.state.ingredients\r\n//                         };\r\n//                         updatedIngredients[type]=updatedCounted;\r\n//                         const priceDeduction =INGREDIENT_PRICES[type];\r\n//                         const oldPrice =this.state.totalPrice;\r\n//                         const newPrice=oldPrice-priceDeduction;\r\n//                         this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n//                         this.updatePurchasedState(updatedIngredients);\r\n//                     }\r\n\r\n                    purchaseHandler=()=>{\r\n\r\n                        this.setState({purchasing:true});\r\n                    }\r\n\r\n                    purchaseCancelHandler=()=>{\r\n\r\n                        this.setState({purchasing:false});\r\n                    }\r\n\r\n                    purchaseContinueHandler=()=>{\r\n                        this.props.history.push('/checkout');\r\n\r\n                        // //alert('You Continue');\r\n                        // const queryParams=[];\r\n                        // for(let i in this.state.ingredients){\r\n                        //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n                        // }\r\n                        // queryParams.push('price='+this.state.totalPrice);\r\n                        // const querystring=queryParams.join('&');\r\n                        // this.props.history.push({\r\n                        //     pathname:'/checkout',\r\n                        //     search:'?'+querystring\r\n                        // });\r\n                    }\r\n\r\n    render(){\r\n\r\n\r\nconst disabledInfo={\r\n    ...this.props.ings\r\n};\r\nfor(let key in disabledInfo){\r\n    disabledInfo[key]=disabledInfo[key] <=0\r\n}\r\n\r\nlet orderSummary=null; \r\nlet burger=this.state.error? <p>Ingredients can't be loaded</p>:<Spinner />;\r\nif(this.props.ings){\r\n    burger=(<Aux>\r\n        <Burger ingredients={this.props.ings}/>\r\n        <BuildControls \r\n        ingredientAdded={this.props.onIngredientAdded} \r\n        ingredientRemoved={this.props.onIngredientRemoved}\r\n        disabled= {disabledInfo}\r\n        price={this.props.price}\r\n        ordered={this.purchaseHandler}\r\n        purchasable ={this.updatePurchasedState(this.props.ings)}\r\n        /></Aux>);\r\n        orderSummary=<OrderSummary \r\npurchaseCanceled={this.purchaseCancelHandler}\r\npurchasedContinue={this.purchaseContinueHandler}\r\ntotalprice={this.props.price}\r\n        ingredients={this.props.ings}/>;\r\n}\r\nif(this.state.loading){\r\n    orderSummary=<Spinner />;\r\n}\r\n\r\n        return (\r\n<Aux>\r\n    <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n        {orderSummary}\r\n    </Modal>\r\n   {burger}\r\n</Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state=>{\r\nreturn{\r\nings:state.ingredients,\r\nprice:state.totalPrice\r\n};\r\n};\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\nreturn{\r\nonIngredientAdded:(ingName)=>dispatch({type:actionTypes.ADD_INGREDIENT,ingredientName:ingName}),\r\nonIngredientRemoved:(ingName)=>dispatch({type:actionTypes.REMOVE_INGREDIENT,ingredientName:ingName})\r\n};\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}